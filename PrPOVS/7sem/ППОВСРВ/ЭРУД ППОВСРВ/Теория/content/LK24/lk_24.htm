<!-- (C) 2010 Nesterenkov Sergey, BSUIR -->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//RU">
<HTML>
<HEAD>
<LINK rel=stylesheet href="../../../Оболочка/css/style2.css" type=text/css>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<META HTTP-EQUIV="Content-Language" CONTENT="ru">
<title>Теория по дисциплине &quot;Программирование проблемно-ориентированных вычислительных средств реального времени&quot;</title>
<base target="_top">

<base target="_self">
<style type="text/css">
body,td,th { font-family: Times New Roman, Times, serif; }
p {margin-left: 5%; margin-right: 5%; }
</style></HEAD>

</HEAD><BODY>
<div class="Header_Style">
<table width="100%" border="0" cellpadding="0" cellspacing="3" background="../../../Оболочка/images/background.jpg">
  <tr> 
    <td width="13%" rowspan=3 align="center" ><img src="../../../Оболочка/images/logo_new.jpg" width=117 align="middle"></td>
  <tr> 
    <td width="70%" colspan=2 align="center" valign="middle"> <H1 align="center" >&nbsp;</H1>
      <H1 align="center" >Электронный ресурс по учебной дисциплине<BR>
        "Программирование проблемно-ориентированных вычислительных средств реального времени"<BR> 
        для специальности: </H1>
<p>1-40 02 02 "Электронные вычислительные средства"
</p></td>
    <td width="12%" rowspan=3 align="center" ><img src="../../images/theory.jpg" width="146" height="85"></td>
  <Tr>
    <td align=center colspan=2><var class="Header_Style"><A HREF="../../../index.htm">Оглавление</A> | <A HREF="../../../Программа/ППОВСРВ_программа_2017.htm" >Программа</A> | <a href="../../../Теория/theory.htm">Теория</a> | <a href="../../../Практика/practice.htm">Практика</a> | <A HREF="../../../Контроль_знаний/test.htm">Контроль знаний</A> | <A HREF="../../../Об авторах/author.htm">Об авторах</A></var></var> </td>
  <tr>
</table></div>



<!--start-->
	<div class="mainTitle" align="center">
	  <h1>Лекция № 3.24</h1>
</div>
	<div>
	  <h3 align="center"><strong>Раздел 3.  Программирование различных задач цифровой обработки сигналов на  проблемно-ориентированных процессорах</strong></h3>
      <p><strong>3.4&nbsp;&nbsp;&nbsp; Формирование случайных процессов с  использованием проблемно-ориентированных процессоров (4 часа)</strong> <br>
        <strong><em>Лекция № 3.24</em></strong><br>
        Формирование случайных процессов с  заданной спектральной плотностью мощности. <br>
      Полигармонические и псевдослучайные  процессы. </p>
</div>

<div align="center">
    <p>
	<input type="button" class="buttonManage" value="&nbsp;Назад&nbsp;" onClick="document.location.href ='../LK23/lk_23.htm'" />
	<input type="button" class="buttonManage" value="&nbsp;Перечень тем лекций&nbsp;" onClick="document.location.href ='../../theory.htm'" />
	<input type="button" class="buttonManage" value="&nbsp;В начало&nbsp;" onClick="document.location.href ='../LK01/lk_01.htm'" />
    </p>
</div>

<!-- (C) 2017 Shemarov Alexander, BSUIR begin-->  

<div class="Text_Style">
  <h1>Формирование  процессов с  заданной спектральной плотностью мощности</h1>
</div>
<div class="Text_Style">
  <p>Формирование процессов с заданной спектральной плотностью мощности является одной из важнейших задач, которые решаются с помощью проблемно-ориентированных процессоров.</p>
  <p>Предположим, что необходимо, сформировать спектр с заданным распределением мощности по частоте. В качестве примера для иллюстрации используем спектр, приведенный на рисунке 3.4.8. Спектр представляется 512 гармониками. Частота i-ой гармоники может быть вычислена по следующей формуле:<br></p>
  <table align="center" width="80%" border="0" cellspacing="0" cellpadding="0">
    <tr>
          <td width="10%" valign="top">&nbsp;</td>
          <td width="70%" valign="center" align="center"><img src="../../images/for030402.png" width="362" height="276"></td>
          <td width="10%" valign="center" align="right">(3.4.2)</td>
    </tr>
  </table>
   <p>Спектральные линии приведены к диапазону мощности P = [0..1[<br></p>
   <h3 align="center"><a name="Рис3.4.8"></a>.<img src="../../images/Ris24_8a.jpg" width="90%" ></h3>
<h3 align="center">Рисунок 3.4.8 &ndash; Пример задания спектра мощности формируемого сигнала с помощью кусочно-линейной апроксимации</h3></div>

</div>



    
<div class="Text_Style">
	<p>Пример программы формирования спектра с помощью кусочно-линейной апроксимации представлен ниже. Используется девять отрезков. При необходимости процесс формирования спектра можно привести к произвольному количеству отрезков, используя извлечение параметров отрезков из упорядоченного массива данных.</p>
	<blockquote>
	  <blockquote>
	    <pre>
		.mmregs

		.def	_c_int00	; Определяем переменную, определяющую стартовый адрес
Spectr_Size		.equ	513

F0					.equ	0
A0					.equ	32767*0/1000
F1					.equ	50
A1					.equ	32767*0/1000
F2					.equ	80
A2					.equ	32767*500/1000
F3					.equ	150
A3					.equ	32767*500/1000
F4					.equ	200
A4					.equ	32767*900/1000
F5					.equ	280
A5					.equ	32767*900/1000
F6					.equ	300
A6					.equ	32767*200/1000
F7					.equ	350
A7					.equ	32767*200/1000
F8					.equ	380
A8					.equ	32767*0/1000
F9					.equ	512
A9					.equ	32767*0/1000

D01					.equ	(A1-A0)/(F1-F0)
D12					.equ	(A2-A1)/(F2-F1)
D23					.equ	(A3-A2)/(F3-F2)
D34					.equ	(A4-A3)/(F4-F3)
D45					.equ	(A5-A4)/(F5-F4)
D56					.equ	(A6-A5)/(F6-F5)
D67					.equ	(A7-A6)/(F7-F6)
D78					.equ	(A8-A7)/(F8-F7)
D89					.equ	(A9-A8)/(F9-F8)

		.text

_c_int00:					; Метка начала программы


		ssbx	sxm
		
		stm		#Stack_Array, SP
		stm		#Spectr_D, AR1		
		

;-------------------------------------------Begin
		stm		#Spectr_D, AR1		

;-------------------------------------------0
		
		ld		#D01, B
		ld		#A0, A
		stm		#(F1-F0-1), BRC
		
		rptb	end_bl1

			stl		A, *AR1+
end_bl1:	add		B, A
				
;-------------------------------------------1
		
		ld		#D12, B
		ld		#A1, A
		stm		#(F2-F1-1), BRC
		
		rptb	end_bl2

			stl		A, *AR1+
end_bl2:	add		B, A
				
;-------------------------------------------2
		
		ld		#D23, B
		ld		#A2, A
		stm		#(F3-F2-1), BRC
		
		rptb	end_bl3

			stl		A, *AR1+
end_bl3:	add		B, A
				
;-------------------------------------------3
		
		ld		#D34, B
		ld		#A3, A
		stm		#(F4-F3-1), BRC
		
		rptb	end_bl4

			stl		A, *AR1+
end_bl4:	add		B, A

;-------------------------------------------4
		
		ld		#D45, B
		ld		#A4, A
		stm		#(F5-F4-1), BRC
		
		rptb	end_bl5

			stl		A, *AR1+
end_bl5:	add		B, A

;-------------------------------------------5
		
		ld		#D56, B
		ld		#A5, A
		stm		#(F6-F5-1), BRC
		
		rptb	end_bl6

			stl		A, *AR1+
end_bl6:	add		B, A

;-------------------------------------------6
		
		ld		#D67, B
		ld		#A6, A
		stm		#(F7-F6-1), BRC
		
		rptb	end_bl7

			stl		A, *AR1+
end_bl7:	add		B, A

;-------------------------------------------7
		
		ld		#D78, B
		ld		#A7, A
		stm		#(F8-F7-1), BRC
		
		rptb	end_bl8

			stl		A, *AR1+
end_bl8:	add		B, A

;-------------------------------------------8
		
		ld		#D89, B
		ld		#A8, A
		stm		#(F9-F8), BRC
		
		rptb	end_bl9

			stl		A, *AR1+
end_bl9:	add		B, A

;-------------------------------------------End

;...

		.data
		
Spectr_D		.space	Spectr_Size*16
				.align	128
Stack_Array		.bes	128*16
		
		.end
	    </pre>
</blockquote>
  </blockquote>
</div>
 	</div>

<div class="Text_Style">
  <p>Спектральные линии мощности не  могут быть основой для линейных преобразований, поэтому приведем спектр мощности к амплитудному спектру путем извлечения из каждой линии квадратного корня. Спектр мощности и амплитудный спекты представлены на рисунке 3.4.9.<br></p>
   <h3 align="center"><a name="Рис3.4.9"></a>.<img src="../../images/Ris24_9.jpg" width="90%" ></h3>
<h3 align="center">Рисунок 3.4.9 &ndash; Приведение спектра мощности к амплитудному спектру</h3></div>
</div>

<div class="Text_Style">
	<p>Пример реализации подпрограммы вычисления квадратного корня для шестнадцатиразрядных данных SQRT16 представлена ниже. </p>
	<blockquote>
	  <blockquote>
	    <pre>
		stm		#Spectr_D, AR1	
		stm		#Spectr_A, AR6
		stm		#Spectr_Size-1, AR7

start_bl10:
		ld		*AR1+, 16, A
		call	SQRT16
		sth		A, *AR6+
		banz	start_bl10, *AR7- 

 		nop
		nop
		
		
; Подпрограмма извлечения корня из целого 16-разрядного числа
SQRT16:
				sth		A, M			;  подкоренное значение сохраняем в памяти
				ld		A, B
				
				ld		#0x4000, 16, A
				sth		A, iter
				sth		A, mask

				stm		#15-1, BRC		; Выполняем пятнадцать итераций умножения 16*16 разрядов	
				rptb	end_b1
				
				squrs	iter, B
			
				ld		mask, 16, A
				sftl	A, -1
				sth		A, mask
				xc		1, BLT					 				
				neg		A
				add		iter, 16, A
				sth		A, iter
end_b1:			ld		M, 16, B
				add		#0x8000, A
				
				ret

				.data
				

iter:			.word	0
mask:			.word	0
M:				.word	0		
Spectr_D		.space	Spectr_Size*16
Spectr_A		.space	Spectr_Size*16
				.align	128
Stack_Array		.bes	128*16
		
		.end
	    </pre>
</blockquote>
  </blockquote>
</div>
 	</div>

<div class="Text_Style">
  <h2>Формирование полигармонических процессов с  заданной спектральной плотностью мощности <br>
  </h2>
</div>   

<div class="Text_Style"><p>Полученный спектр можно использовать для генерирования полигармонического сигнала, путем выполнения обратного быстрого преобразования Фурье над заданным спектром. Полигармонический сигнал периодичен, поэтому достаточно рассчитать одну реализацию для заданного спектра. Однако, необходимо отметить, что, при одинаковых фазах для спектральных линий исходного спектра формируемого сигнала, мы получим реализацию, обладающую значительным динамическим диапазоном, которая может не только не воспроизводиться реальной системой, но и быть неприемлимой для нее. Для устранения этой проблемы используют рандомизацию фаз.<br>
Рандомизация фаз заключается в формировании фазы гармонического сигнала сигнала i-ой гармоники по случайному закону. На базе сформированной случайной величины &xi;<sub>i</sub> равномерно распределенной на отрезке [0,1], получаем комплексное представление линии спектра по следующему закону, описываемому с помощью формулы 3.4.3:<br></p>
  <table align="center" width="80%" border="0" cellspacing="0" cellpadding="0">
    <tr>
          <td width="10%" valign="top">&nbsp;</td>
          <td width="70%" valign="center" align="center"><img src="../../images/for030403.png" width="718" height="208"></td>
          <td width="10%" valign="center" align="right">(3.4.3)</td>
    </tr>
  </table>
</div>
<div class="Text_Style">
  <p>Рандомизированный по фазам исходный спектр в виде комплексных спектральных линий, преобразованных в алгебраическую форму представления комплексного числа представлен на  рисунке 3.4.10.<br></p>
   <h3 align="center"><a name="Рис3.4.10"></a>.<img src="../../images/Ris24_10.jpg" width="90%" ></h3>
<h3 align="center">Рисунок 3.4.10 &ndash; Рандомизированный по фазам амплитудный спектр в алгебраической форме представления комплексных чисел</h3></div>
</div>

<div class="Text_Style">
	<p>Пример реализации подпрограммы рандомизации амплитудного спектра по фазам распределенным равномерно на отрезке [0..2&Pi; RANDOM_FAZE представлена ниже. </p>
	<blockquote>
	  <blockquote>
	    <pre>
; Подпрограмма рандомизации фаз амплитудного спектра
RANDOM_FAZE:
; Формирование случайного числа, как случайной фазы линии амплитудного спектра 
				dld		GPRN_Start, A
				ld		A, 3, B
				xor		B, A
				ld  	A, -16, B
				and 	#0x000F, B
				xor		B, -1, A
				dst		A, GPRN_Start

; Определение функции cos случайной фазы
				ld		GPRN_Start+1, 12, B 
				add		#0x0400, 16, B
				and		#0x0FFF, 16, B
				add		#sine_table, 16, B
				sftl	B, -16, B
				stlm	B, AR2
				nop
				nop					
				mpy		*AR2, *AR3, A

; Определение функции sin случайной фазы
				ld		GPRN_Start+1, 12, B 
;				add		#0x0400, 16, B
				and		#0x0FFF, 16, B
				add		#sine_table, 16, B
				sftl	B, -16, B
				stlm	B, AR2
				nop
				nop					
				mpy		*AR2, *AR3+, B
				
				ret

				.data
				
GPRN_Start		.long	0x87878

Spectr_D		.space	Spectr_Size*16
Spectr_A		.space	Spectr_Size*16

Spectr_A_Re		.space	Spectr_Size*16
Spectr_A_Im		.space	Spectr_Size*16

sine_table		.include	"sine_table1.asm"

				.align	128
Stack_Array		.bes	128*16
		
		.end
        	    </pre>
</blockquote>
  </blockquote>
</div>
 	</div>

<div class="Text_Style">
  <h2>Формирование случайных процессов с  заданной спектральной плотностью мощности <br>
  </h2>
</div><strong></strong>

<div class="Text_Style"> <p>

</p>
  <p>При  формировании случайных процессов с заданной спектральной плотностью  распределения мощности сигнала по частоте, необходимо не только рандомизировать  фазовый спектр, но и вносить случайную составляющую в амплитудный спектр. Так  как отклонение от математического ожидания амплитуды в спектре не должно быть  значительным, то есть оставаться в пределах значения спектральной линии,  наиболее подходящим для генерирования случайного значения амплитуды является  нормальный закон распределения случайной величины.<br>
    Необходимо  решить проблему формирования случайных чисел, распределенных по нормальному закону.<br>
    Существует  прямой путь решения этой проблемы с использованием программного генератора  равномерно распределенных случайных чисел. На рисунке 3.4.11 задача  представлена графически. Необходимо получить данные, распределенные по  нормальному закону со средним (математическим ожиданием) &micro;' и стандартным  отклонением &sigma;' как на рисунке  3.4.11а, опираясь на возможность использования генератора, генерирующего  случайные числа, которые распределены равномерно на отрезке от нуля до единицы,  как на рисунке 3.4.11б.
    <br></p>
  <h3 align="center"><a name="Рис3.4.11"></a>.<img src="../../images/ris030411.png" width="800" height="222"></h3>
<h3 align="center">Рисунок 3.4.11 &ndash; Функции плотности вероятностей  (ФПВ): <br>
  (а) Нормальное распределение со средним &micro;' и стандартным отклонением &sigma;'; <br>(б) Равномерное распределение на интервале от  нуля до единицы</h3>
</div>
</div>

<div class="Text_Style"> <p>В  теории вероятностей доказана центральная предельная теорема, которая утверждает  то, что при суммировании М случайных чисел с произвольным распределением  вероятностей с ростом М распределение суммы приближается к нормальному  распределению. Другими словами, если мы генерируем набор из N случайных отсчетов, которые распределены  равномерно на отрезке от нуля до единицы, мы можем прибавлять к первому набору  отсчетов последующие наборы из N отсчетов. По  мере увеличения количества суммированных наборов распределение суммарной  последовательности из N отсчетов все  больше приближается к нормальному распределению, то есть сумма становится асимптотически  нормальной. Как показал опыт, в практических задачах распределение суммы при М  &gt; 30 достаточно близко к нормальному. <br>
После суммирования <em>М </em>наборов равномерно распределенных  отсчетов суммарный набор <em>y<sub>sum</sub></em> будет иметь  распределение, показанное на рисунке 3.4.12.     <br></p>
  <h3 align="center"><a name="Рис3.4.12"></a><img src="../../images/ris030412.png" width="918" height="296"></h3>
<h3 align="center">Рисунок 3.4.12 &ndash; Распределение вероятностей набора данных, полученного суммированием данных с равномерным распределением </h3>
</div>
</div></p>

</div>
<div class="Text_Style"><p>Поскольку мы  просуммировали <em>М</em> наборов, среднее <em>y<sub>sum</sub></em>  = <em>М/2</em>. Чтобы определить стандартное  отклонение <em>&sigma;</em> последовательности <em>y<sub>sum</sub></em>,  предположим, что шести стандартным отклонениям соответствует точка <em>М - &micro; </em>:</p>
  <table align="center" width="80%" border="0" cellspacing="0" cellpadding="0">
    <tr>
          <td width="10%" valign="top">&nbsp;</td>
          <td width="70%" valign="center" align="center"><img src="../../images/for030404.png" width="136" height="36"></td>
          <td width="10%" valign="center" align="right">(3.4.4)</td>
    </tr>
  </table> <p>Это предположение оправданно, так как вероятность появления в <em>y<sub>sum</sub></em> значений, больших <em>М</em>, равна нулю, а при нормальном распределении вероятность получения отсчета, равного шести стандартным отклонениям составляет одну шестимиллионную, то есть практически равна нулю. <br>Поскольку<em> µ = М/2</em>, из формулы 3.4.4 следует, что стандартное отклонение <em>y<sub>sum</sub></em> равно:</p>
  
   <table align="center" width="80%" border="0" cellspacing="0" cellpadding="0">
    <tr>
          <td width="10%" valign="top">&nbsp;</td>
          <td width="70%" valign="center" align="center"><img src="../../images/for030405.png" width="328" height="96"></td>
          <td width="10%" valign="center" align="right">(3.4.5)</td>
    </tr>
</table> 
<p>Для преобразования ysum в требуемый набор  данных со средним &micro;' и стандартным отклонением &sigma;' необходимо: <br>
- вычесть <em>М/2</em> из каждого элемента, чтобы сделать среднее равным нулю; <br>
- обеспечить равенство &sigma;'  значению <em>М/2</em> путем умножения каждого элемента  в последовательности с нулевым средним на <em>12</em><em>&sigma;</em><em>'/М</em>; <br>
- перенести новый набор данных на новое среднее &micro;',  прибавляя &micro;' к каждому элементу нового набора данных.<br>
Если обозначить требуемую  нормально распределенную случайную последовательность <em>y<sub>desired</sub></em>, то n-ый отсчет этой  последовательности математически описывается как:</p>
   <table align="center" width="80%" border="0" cellspacing="0" cellpadding="0">
    <tr>
          <td width="10%" valign="top">&nbsp;</td>
          <td width="70%" valign="center" align="center"><img src="../../images/for030406.png" width="417" height="84"></td>
          <td width="10%" valign="center" align="right">(3.4.6)</td>
    </tr>
</table><p> 
Такой алгоритм оптимален для использования в программных реализациях генераторов случайных последовательностей с нормальным законом распределения. При разработке аппаратуры иногда необходимо генерировать нормально распределенные данные с высокой скоростью. Существуют эффективные методы с генерации нормально распределенных данных с использованием арифметики с фиксированной запятой. 
Описанный выше метод генерации нормально распределенных случайных чисел работает достаточно хорошо, но его результаты несовершенны, потому что хвосты распределения вероятностей, показанного на рисунке 3.4.12, не приближаются к Гауссовым распределениям. Более совершенный и более корректный статистически (с улучшенной случайностью) метод, который можно применять называется методом зиккурата (Ziggurat).
</p>
<p>Рассмотрим алгоритм формирования случайного процесса с  заданной спектральной плотностью мощности. Среднее значение мощности по каждой полосе задается согласно требованию к формируемому сигналу. Пример спектра распределения мощности по полосам для формируемого случайного процесса представлен на рисунке 3.4.13.</p>
   <h3 align="center"><a name="Рис3.4.13"></a>.<img src="../../images/Ris24_13a.jpg" width="90%" ></h3>
<h3 align="center">Рисунок 3.4.13 &ndash; Пример задания спектра мощности случайного процесса формируемого сигнала с помощью кусочно-линейной апроксимации</h3></div>
</div>
<div class="Text_Style"> <p>
Далее формируем случайный процесс с нормальным распределением в диапазоне [-1..1]. Количество отсчетов случайного процесса соответствует количеству заданных спектральных линий. Каждый отсчет случайного нормального процесса получается путем суммирования 37 отсчетов равномерно распределенной случайной величины, так же сформированной в диапазоне [-1..1].
</p></div>

<div class="Text_Style">
	<p>Пример программной реализации нормально распределенной последовательности представлена ниже. </p>
	<blockquote>
	  <blockquote>
	    <pre>
		.mmregs
;		.mlib	"mylib.lib"

		.def	_c_int00	; Определяем переменную, определяющую стартовый адрес
Spectr_Size		.equ	513

      ...

		.text

_c_int00:					; Метка начала программы


		ssbx	sxm
		ssbx	frct
		
      ...
      
; Генерирование случайной величины, распределенной по нормальному закону

		stm		#Random_Nopm, AR2
		stm		#Spectr_Size-1, AR7
		stm		#Random_Bufer, AR3
		
start_bl12:
		call	RAND_NORM
		sth		A, *AR2+
		banz	start_bl12, *AR7- 		
		
		
          ...


; Подпрограмма генерирования случайного числа распределенного
; по нормальному закону
RAND_NORM:
; Формирование выборки случайных чисел распределенных по равномерному закону

				stm		#Norm_M-1, BRC
				
				rptb	end_bl_rn_1
				
				dld		GPRN_Start, A
				ld		A, 3, B
				xor		B, A
				ld  	A, -16, B
				and 	#0x000F, B
				xor		B, -1, A
				dst		A, GPRN_Start
				sfta	A, 12, B
end_bl_rn_1:	dst		B, *AR3+


; Формирование отсчета случайных числа распределенного по нормальному закону
				xor		A, A

				dld		*+AR3(#-Norm_M*2), B
				stm		#Norm_M-1, BRC

				
				rptb	end_bl_rn_2
				dld		*AR3+, B
end_bl_rn_2:	add		B, -4, A
				dld		*+AR3(#-Norm_M*2), B
				
				ret			

            ...

				.data
				
GPRN_Start		.long	0x87878

Spectr_D		.space	Spectr_Size*16

            ...

Random_Nopm		.space	Spectr_Size*16
				.align
Random_Bufer	.space  Norm_M*32

				.align	128
Stack_Array		.bes	128*16
		
		.end
        	    </pre>
</blockquote>
  </blockquote>
</div>

<div class="Text_Style">
  <p>Случайный процесс с отсчетами, распределенными по нормальному закону, сформированный с помощью представленной подпрограммы RAND_NORM, приведен  на  рисунке 3.4.14.<br></p>
   <h3 align="center"><a name="Рис3.4.14"></a>.<img src="../../images/Ris24_14.jpg" width="90%" ></h3>
<h3 align="center">Рисунок 3.4.14 &ndash; Пример реализации случайной последовательности распределенной по нормальному закону (M=37)</h3></div>
</div>

<div class="Text_Style"> <p>
Далее, на следующем шаге, приводим полученную нормально равпределенную последовательность к требуемому отклонению &sigma;, и импользуем новые приведенные случайные величины для рандомизации спектра мощности по формуле:</p>
   <table align="center" width="80%" border="0" cellspacing="0" cellpadding="0">
    <tr>
          <td width="10%" valign="top">&nbsp;</td>
          <td width="70%" valign="center" align="center"><img src="../../images/for030407.png" width="242" height="40"></td>
          <td width="10%" valign="center" align="right">(3.4.7)</td>
    </tr>
</table>
</div>

<div class="Text_Style">
	<p>Пример программы для формирования спектра мощности с распределением мощности по полосам по нормальному закону представлена ниже. </p>
	<blockquote>
	  <blockquote>
	    <pre>
		.mmregs
;		.mlib	"mylib.lib"

Spectr_Size		.equ	513
Norm_M			  .equ	37
Sigma_Norm		.equ	32768*500/1000

          ...

		.text

_c_int00:					; Метка начала программы

          ...

; Рандомизация  спектра мощности		
		stm		#Spectr_D, AR3	
		stm		#Random_Nopm, AR4
		stm		#Spectr_Size-1, AR7

start_bl13:
		call	RANDOM_AMPL
		sth		B, *AR3+
		banz	start_bl13, *AR7- 

          ...

 		nop
		nop


; Подпрограмма рандомизации амплитуд спектра
RANDOM_AMPL:
; Приведение случайного отсчета к требуемой дисперсии

				mpy		*AR4,#Sigma_Norm, B		
				sth		B, *AR4
				mpy		*AR4+, *AR3, B
				add		*AR3, 16, B 		
				
				ret
        	    </pre>
</blockquote>
  </blockquote>
</div>

<div class="Text_Style">
  <p>Пример сформированного спектра мощности с распределением мощности по полосам по нормальному закону представлен  на  рисунке 3.4.15.<br></p>
   <h3 align="center"><a name="Рис3.4.15"></a>.<img src="../../images/Ris24_15.jpg" width="90%" ></h3>
<h3 align="center">Рисунок 3.4.15 &ndash;Пример спектра мощности с распределением мощности по полосам по нормальному закону</h3>
</div>
</div>

<div class="Text_Style">
  <p>На рисунке 3.4.16 состветственно представлен амплитудный спектр, полученный из спектра представленного на рисунке 3.4.15. После рандомизации фаз каждой амплитуды, получается соответствующее представление амплитудного спектра в алгебраической форме (Рисунок 3.4.17).</p>
   <h3 align="center"><a name="Рис3.4.16"></a>.<img src="../../images/Ris24_16.jpg" width="90%" ></h3>
<h3 align="center">Рисунок 3.4.16 &ndash; Сформированный амплитудный спектр выборки случайного процесса</h3></div>
<h3 align="center"><a name="Рис3.4.17"></a>.<img src="../../images/Ris24_17.jpg" width="90%" ></h3>
<h3 align="center">Рисунок 3.4.17 &ndash;Рандомизированный по фазам амплитудный спектр в алгебраической форме представления комплексных чисел для формируемого случайного процесса</h3></div>
</div>



</div>


<!-- (C) 2017 Shemarov Alexander, BSUIR end-->  

<div align="center">
	<p>
	<input type="button" class="buttonManage" value="&nbsp;Назад&nbsp;" onClick="document.location.href ='../LK23/lk_23.htm'" />
	<input type="button" class="buttonManage" value="&nbsp;Перечень тем лекций&nbsp;" onClick="document.location.href ='../../theory.htm'" />
	<input type="button" class="buttonManage" value="&nbsp;В начало&nbsp;" onClick="document.location.href ='../LK01/lk_01.htm'" />
    </p>
  
<div class="Text_Style"><br></div>
</div>


<!--end-->
<div class="Header_Style">
<table width="100%" border="0" cellpadding="0" cellspacing="3" bordercolor="#316AC5" background="../../../Оболочка/images/background.jpg">
	<Tr>
    <td align=center colspan=2><var class="Header_Style"><A HREF="../../../index.htm">Оглавление</A> | <A HREF="../../../Программа/ППОВСРВ_программа_2017.htm" >Программа</A> | <a href="../../../Теория/theory.htm">Теория</a> | <a href="../../../Практика/practice.htm">Практика</a> |<A HREF="../../../Контроль_знаний/test.htm">Контроль знаний</A> | <A HREF="../../../Об авторах/author.htm">Об авторах</A></var></var> </td>
  <Tr>
   <td align=center><a href="https://www.bsuir.by/" title="Официальный сайт БГУИР" target="_blank">(С) БГУИР</a></td>
  </tr>
</table></div>

</BODY></HTML>